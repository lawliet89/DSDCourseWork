--alt_ded_mult_y CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" dedicated_multiplier_circuitry="NO" device_family="Cyclone III" dsp_block_balancing="Auto" external_stage_counter=4 input_aclr_a="ACLR0" input_aclr_b="ACLR0" input_reg_a="UNREGISTERED" input_reg_b="UNREGISTERED" level=1 output_reg="UNREGISTERED" pipeline=0 pipeline_clear="ACLR0" pipeline_reg="UNREGISTERED" representation_a="UNSIGNED" representation_b="UNSIGNED" sub_dedicated_multiplier_circuitry="NO" width_a=18 width_b=4 aclr clock dataa datab ena result
--VERSION_BEGIN 12.0 cbx_alt_ded_mult_y 2012:05:31:20:08:01:SJ cbx_cycloneii 2012:05:31:20:08:02:SJ cbx_lpm_add_sub 2012:05:31:20:08:02:SJ cbx_mgl 2012:05:31:20:10:16:SJ cbx_padd 2012:05:31:20:08:02:SJ cbx_parallel_add 2012:05:31:20:08:02:SJ cbx_stratix 2012:05:31:20:08:02:SJ cbx_stratixii 2012:05:31:20:08:02:SJ cbx_util_mgl 2012:05:31:20:08:02:SJ  VERSION_END


-- Copyright (C) 1991-2012 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.


FUNCTION mac_mult_up31 (clk[3..0], dataa[17..0], datab[3..0], signa, signb)
RETURNS ( dataout[21..0]);
FUNCTION mac_out_q321 (clk[3..0], dataa[21..0], signa, signb)
RETURNS ( dataout[21..0]);
FUNCTION dffpipe_83c (d[21..0])
RETURNS ( q[21..0]);

--synthesis_resources = lut 115 
SUBDESIGN ded_mult_9qf1
( 
	aclr[3..0]	:	input;
	clock[3..0]	:	input;
	dataa[17..0]	:	input;
	datab[3..0]	:	input;
	ena[3..0]	:	input;
	result[21..0]	:	output;
) 
VARIABLE 
	mac_mult22 : mac_mult_up31;
	mac_out23 : mac_out_q321;
	pre_result : dffpipe_83c;
	x_dataa[17..0]	: WIRE;
	x_datab[3..0]	: WIRE;
	x_signa[0..0]	: WIRE;
	x_signb[0..0]	: WIRE;

BEGIN 
	mac_mult22.clk[] = ( B"0", B"0", B"0", B"0");
	mac_mult22.dataa[] = ( x_dataa[]);
	mac_mult22.datab[] = ( x_datab[]);
	mac_mult22.signa = x_signa[];
	mac_mult22.signb = x_signb[];
	mac_out23.clk[] = ( B"0", B"0", B"0", B"0");
	mac_out23.dataa[] = mac_mult22.dataout[];
	mac_out23.signa = x_signa[];
	mac_out23.signb = x_signb[];
	pre_result.d[21..0] = mac_out23.dataout[21..0];
	result[] = pre_result.q[];
	x_dataa[] = dataa[];
	x_datab[] = datab[];
	x_signa[] = B"0";
	x_signb[] = B"0";
END;
--VALID FILE
